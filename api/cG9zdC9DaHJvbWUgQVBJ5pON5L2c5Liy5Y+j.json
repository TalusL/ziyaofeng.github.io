{"title":"谷歌插件操作串口","date":"2018-09-20T19:42:24.000Z","excerpt":"","slug":"Chrome API操作串口","tags":["串口","谷歌插件"],"categories":["谷歌插件开发"],"updated":"2018-09-20T11:51:29.295Z","content":"<h1 id=\"Chrome-API操作串口\"><a href=\"#Chrome-API操作串口\" class=\"headerlink\" title=\"Chrome API操作串口\"></a>Chrome API操作串口</h1><p>NWJS使用chrome api连接/接收/发送串口数据</p>\n<p>参考<a href=\"http://www.oschina.net/code/snippet_1379244_55248\" target=\"_blank\" rel=\"noopener\">http://www.oschina.net/code/snippet_1379244_55248</a></p>\n<p>1.本机可以使用 串口虚拟串口程序(vspd 自行下载)<br>2.所需要环境node.js  并且安装模块:iconv-lite<br>3.nwjs所用的环境为nwjs13.* sdk版本</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> onGetDevices = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ports</span>) </span>&#123;<span class=\"comment\">//遍历获取串口名称，一般只有一个串口判断if(ports.length==1)&#123;port=ports[0].path&#125;即可</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; ports.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(ports[i].path);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    chrome.serial.getDevices(onGetDevices);<span class=\"comment\">//获取串口设备名,并将串口设备信息当参数传入指定的onGetDevices函数</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> iconv = <span class=\"built_in\">require</span>(<span class=\"string\">'iconv-lite'</span>);<span class=\"comment\">//若传输英文字符串则无需转码，此处注释掉</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">convertArrayBufferToString</span>(<span class=\"params\">buf</span>) </span>&#123;<span class=\"comment\">//将串口接收到的buffer数据转化成字符串</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> bufView = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(buf);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> encodedString = <span class=\"built_in\">String</span>.fromCharCode.apply(<span class=\"literal\">null</span>, bufView);</span><br><span class=\"line\">        <span class=\"comment\">//nodejs转编码(不可直接转utf-8否则乱码)</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> iconv.decode(encodedString, <span class=\"string\">'gbk'</span>);<span class=\"comment\">//若传输英文字符串则无需转码，此处直接返回</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> onReceiveCallback = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">info</span>) </span>&#123;<span class=\"comment\">//串口数据接收函数</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'received'</span>, convertArrayBufferToString(info.data));</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">//convertStringToArrayBuffer('hello')</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> convertStringToArrayBuffer = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str</span>) </span>&#123;<span class=\"comment\">//将字符串转化成buffer用于串口数据发送</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> <span class=\"built_in\">ArrayBuffer</span>(str.length);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> bufView = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(buf);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; str.length; i++) &#123;</span><br><span class=\"line\">            bufView[i] = str.charCodeAt(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> buf;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">var</span> onConnect = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">connectionInfo</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(chrome.runtime.lastError, connectionInfo);<span class=\"comment\">//输出连接信息</span></span><br><span class=\"line\">        chrome.serial.onReceive.addListener(onReceiveCallback);<span class=\"comment\">//指定串口数据接收函数</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> connectionId = connectionInfo.connectionId;<span class=\"comment\">//输出串口连接id，用于区别多串口</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> buffer = <span class=\"keyword\">new</span> <span class=\"built_in\">ArrayBuffer</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> dataView = <span class=\"keyword\">new</span> <span class=\"built_in\">DataView</span>(buffer);</span><br><span class=\"line\">        dataView.setInt8(<span class=\"number\">0</span>, <span class=\"number\">0xaa</span>);<span class=\"comment\">//构造buffer数据</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        chrome.serial.send(connectionId, buffer, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//指定串口连接id，直接发送buffer数据，也可将字符串转化成buffer再发送convertStringToArrayBuffer(\"hello\")</span></span><br><span class=\"line\">            chrome.serial.update(connectionId, &#123;<span class=\"comment\">//改变波特率等参数</span></span><br><span class=\"line\">                bitrate: <span class=\"number\">9600</span></span><br><span class=\"line\">            &#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(chrome.runtime.lastError, result);<span class=\"comment\">//改变执行结果</span></span><br><span class=\"line\"> </span><br><span class=\"line\">                chrome.serial.send(connectionId, buffer, <span class=\"built_in\">console</span>.log.bind(<span class=\"built_in\">console</span>));<span class=\"comment\">//发送数据</span></span><br><span class=\"line\"> </span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"> </span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">    chrome.serial.connect(<span class=\"string\">'COM3'</span>, &#123;<span class=\"comment\">//以波特率9600，连接串口3，指定连接函数onConnect</span></span><br><span class=\"line\">        bitrate: <span class=\"number\">9600</span></span><br><span class=\"line\">    &#125;, onConnect);</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>package.json文件内容://因为使用的是原生chrome api，个人认为不需要nodejs串口配置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"serialportDemo\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index.html\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"nodejs\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"width\"</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"height\"</span>: <span class=\"number\">200</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"window\"</span>: &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"windowdemo\"</span>,</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"attr\">\"toolbar\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"attr\">\"width\"</span>: <span class=\"number\">800</span>,</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"attr\">\"height\"</span>: <span class=\"number\">600</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"resizable\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"attr\">\"show_in_taskbar\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"attr\">\"frame\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"attr\">\"kiosk\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"><span class=\"attr\">\"permissions\"</span>: [</span><br><span class=\"line\">  <span class=\"string\">\"serial\"</span></span><br><span class=\"line\">],</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"attr\">\"webkit\"</span>: &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"attr\">\"plugin\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/images/20180219173433356.png\" alt=\"20180219173433356\"></p>\n","next":{"title":"JVM垃圾回收","slug":"搞定JVM垃圾回收就是这么简单"},"link":"http://ziyaofeng.github.io/2018/09/21/Chrome API操作串口/","toc":[{"title":"Chrome API操作串口","id":"Chrome-API操作串口","index":"1"}]}